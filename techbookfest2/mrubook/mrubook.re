= はじめに

本書は主に Rubyist をターゲットに、軽量 Ruby 実装である mruby の言語処理系の実装を解説していきます。

想定する読者としては Ruby でコードを書いたことがある人、 Ruby の言語処理系に興味がある人としています。
そのため本書では Ruby の文法についていちから説明するなどといった記述はしません。あらかじめご了承ください。

筆者の目指す本書のゴールとしては、 mruby の特徴やその実装に関する造詣を深めていただき、 mruby に対する興味を深めていただいたり、もっと欲を言うと mruby コミュニティに参加していただくきっかけになることとしています。
本書が、あなたにとって mruby という新しい世界に踏み込むきっかけになれたら嬉しいです。

== mruby とは

さっそく mruby の実装の話に突入したいところですが、流石に急すぎると思われるので一旦簡単に mruby 自体について解説いたします。
あなたが「mruby は既にある程度知ってるよ！」という方でしたら、次の章までスキップしていただければ幸いです。

mruby は先述の通り軽量、省メモリ Ruby の実装です。
また機能もある程度 Ruby から削減されています。具体的には Ruby の JIS/ISO 規格に記載がある機能は標準で搭載されているのですが、それ以外はオプションな立ち位置で組み込むが ON/OFF が可能だったり、そもそも実装されていなかったりします。

主な用途としては組み込み環境向けでの利用が想定されます。
また他のアプリケーションに組み込んで使用するパターン（例えば、 matsumoto-r さんが開発した mod_mruby や ngx_mruby など）や、コマンドラインツールを実装するための言語として使用（mruby-cli）されていたりもします。

さらに mruby のサードパーティライブラリは mrbgem という単位で管理・配布可能です。ちょうど Ruby の RubyGems に相当します。
mrbgem は mruby をビルドする際の設定ファイルにそれを利用する記述することで、ビルドされたバイナリにリンクされる形で取り込まれます。


= 言語処理系のコア

== フロントエンド

== バックエンド

= Ruby との比較

== クラスとオブジェクト

== 変数と定数

== khash

== ガベージコレクション

= 標準ライブラリ

== Array

== Hash

== Numeric / Integer / Fixnum / Float

== String

== Symbol

== Proc

== Fiber

= おわりに
